version: '3.8'

services:
  postgres:
    image: postgis/postgis:14-3.3
    container_name: kobo-postgres
    restart: always
    networks:
      - kobo-backend-network
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data

  mongo:
    image: mongo:5.0
    container_name: kobo-mongo
    restart: always
    networks:
      - kobo-backend-network
    volumes:
      - mongo_data_volume:/data/db

  redis-main:
    image: redis:6-alpine
    container_name: kobo-redis-main
    restart: always
    networks:
      - kobo-backend-network
    volumes:
      - redis_main_data_volume:/data

  redis-cache:
    image: redis:6-alpine
    container_name: kobo-redis-cache
    restart: always
    networks:
      - kobo-backend-network
    volumes:
      - redis_cache_data_volume:/data

  enketo:
    image: kobotoolbox/enketo-express:custom-confirmation-message
    container_name: enketo
    restart: always
    networks:
      - kobo-frontend-network
      - kobo-backend-network
    environment:
      ENKETO_EXPRESS_REDIS_HOST: redis-cache
      ENKETO_EXPRESS_REDIS_PORT: 6379
      ENKETO_REDIS_URL: redis://redis-cache:6379
      REDIS_URL: redis://redis-cache:6379
      ENKETO_REDIS_MAIN: redis://redis-cache:6379
      ENKETO_REDIS_CACHE: redis://redis-cache:6379
      ENKETO_API_URL: http://kpi:8000
      ENKETO_API_TOKEN: ${ENKETO_API_TOKEN}
      ENKETO_DOMAIN: ${ENKETO_DOMAIN}
      ENKETO_OFFLINE: ${ENKETO_OFFLINE}
      ENKETO_HTTPS_ONLY: 'false'
      ENKETO_ENCRYPTION_KEY: ${ENKETO_ENCRYPTION_KEY}
    depends_on:
      - redis-cache

  kpi:
    image: kobotoolbox/kpi:2.025.34b
    container_name: kpi
    restart: always
    networks:
      - kobo-frontend-network
      - kobo-backend-network
    environment:
      # Ajusta estas variables seg√∫n tus necesidades
      POSTGRES_DB: kobo
      POSTGRES_USER: kobo
      POSTGRES_PASSWORD: kobo
      POSTGRES_HOST: postgres
      MONGO_HOST: mongo
      REDIS_HOST: redis-main
      REDIS_PORT: 6379
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
    depends_on:
      - postgres
      - mongo
      - redis-main

  kobocat:
    image: kobotoolbox/kobocat:2.024.19e
    container_name: kobocat
    restart: always
    networks:
      - kobo-frontend-network
      - kobo-backend-network
    environment:
      POSTGRES_DB: kobo
      POSTGRES_USER: kobo
      POSTGRES_PASSWORD: kobo
      POSTGRES_HOST: postgres
      MONGO_HOST: mongo
      REDIS_HOST: redis-main
      REDIS_PORT: 6379
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
    depends_on:
      - postgres
      - mongo
      - redis-main

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    restart: always
    ports:
      - "8081:80"
    networks:
      - kobo-frontend-network
      - kobo-backend-network
    depends_on:
      - enketo
      - kpi
      - kobocat

networks:
  kobo-frontend-network:
  kobo-backend-network:

volumes:
  postgres_data_volume:
  mongo_data_volume:
  redis_main_data_volume:
  redis_cache_data_volume:
