version: '3.8'
 
networks:
  kobo-frontend-network:
    driver: bridge
  kobo-backend-network:
    driver: bridge

volumes:
  postgres_data_volume:
  mongo_data_volume:
  redis_main_data_volume:
  redis_cache_data_volume:
  kpi_media_volume:
  kobocat_media_volume:

 services:
 services:
   postgres:
   postgres:
     image: postgis/postgis:14-3.3
     image: postgis/postgis:14-3.3
     container_name: kobo-postgres
     container_name: kobo-postgres
     restart: always
     restart: always
    networks:
      - kobo-backend-network
     environment:
     environment:
      - POSTGRES_USER=kobo
      POSTGRES_DB: ${KOBO_DB_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      POSTGRES_USER: ${KOBO_DB_USER}
      - KOBO_DB_NAME=${KOBO_DB_NAME}
      POSTGRES_PASSWORD: ${KOBO_USER_PASSWORD}
      - KOBO_DB_USER=${KOBO_DB_USER}
      - KOBO_DB_PASSWORD=${KOBO_USER_PASSWORD}
      - KOBOCAT_DB_NAME=${KOBOCAT_DB_NAME}
      - KOBOCAT_DB_USER=${KOBOCAT_DB_USER}
      - KOBOCAT_DB_PASSWORD=${KOBOCAT_USER_PASSWORD}
     volumes:
     volumes:
      - postgres_data_volume:/var/lib/postgresql/data
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kobo-backend-network
 
 
   mongo:
   mongo:
     image: mongo:5.0
     image: mongo:5.0
 @@ -40,25 +21,40 @@ services:
     networks:
     networks:
       - kobo-backend-network
       - kobo-backend-network
     volumes:
     volumes:
      - mongo_data_volume:/data/db
      - mongo_data:/data/db

  redis-cache:
    image: redis:6-alpine
    container_name: kobo-redis-cache
    restart: always
    networks:
      - kobo-backend-network
 
 
   redis-main:
   redis-main:
     image: redis:6-alpine
     image: redis:6-alpine
     container_name: kobo-redis-main
     container_name: kobo-redis-main
     restart: always
     restart: always
     networks:
     networks:
       - kobo-backend-network
       - kobo-backend-network
    volumes:
      - redis_main_data_volume:/data
 
 
  redis-cache:
  enketo:
    image: redis:6-alpine
    image: kobotoolbox/enketo-express:custom-confirmation-message
    container_name: kobo-redis-cache
    container_name: enketo
     restart: always
     restart: always
     networks:
     networks:
      - kobo-frontend-network
       - kobo-backend-network
       - kobo-backend-network
    volumes:
    environment:
      - redis_cache_data_volume:/data
      - ENKETO_EXPRESS_REDIS_HOST=redis-cache
      - ENKETO_EXPRESS_REDIS_PORT=6379
      - ENKETO_API_URL=http://kpi:8000
      - ENKETO_API_TOKEN=${ENKETO_API_TOKEN}
      - ENKETO_DOMAIN=${ENKETO_DOMAIN}
      - ENKETO_OFFLINE=${ENKETO_OFFLINE}
      - ENKETO_HTTPS_ONLY=false
      - ENKETO_ENCRYPTION_KEY=${ENKETO_ENCRYPTION_KEY}
    depends_on:
      - redis-cache
 
 
   kpi:
   kpi:
     image: kobotoolbox/kpi:2.025.34b
     image: kobotoolbox/kpi:2.025.34b
 @@ -68,6 +64,7 @@ services:
       - kobo-frontend-network
       - kobo-frontend-network
       - kobo-backend-network
       - kobo-backend-network
     environment:
     environment:
      - DATABASE_URL=postgres://${KOBO_DB_USER}:${KOBO_USER_PASSWORD}@postgres:5432/${KOBO_DB_NAME}
       - KPI_DATABASE_URL=postgres://${KOBO_DB_USER}:${KOBO_USER_PASSWORD}@postgres:5432/${KOBO_DB_NAME}
       - KPI_DATABASE_URL=postgres://${KOBO_DB_USER}:${KOBO_USER_PASSWORD}@postgres:5432/${KOBO_DB_NAME}
       - MONGODB_DATABASE=kobofe
       - MONGODB_DATABASE=kobofe
       - MONGODB_HOST=mongo
       - MONGODB_HOST=mongo
 @@ -91,47 +88,41 @@ services:
       - kobo-frontend-network
       - kobo-frontend-network
       - kobo-backend-network
       - kobo-backend-network
     environment:
     environment:
      - KOBOCAT_DATABASE_URL=postgres://${KOBOCAT_DB_USER}:${KOBOCAT_USER_PASSWORD}@postgres:5432/${KOBOCAT_DB_NAME}
      - DATABASE_URL=postgres://${KOBO_DB_USER}:${KOBO_USER_PASSWORD}@postgres:5432/${KOBO_DB_NAME}
      - MONGODB_DATABASE=kobofe
       - MONGODB_HOST=mongo
       - MONGODB_HOST=mongo
      - REDIS_HOST=redis-cache
      - REDIS_HOST=redis-main
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY_2}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
     depends_on:
     depends_on:
       - postgres
       - postgres
       - mongo
       - mongo
      - redis-cache
      - redis-main
     volumes:
     volumes:
       - kobocat_media_volume:/srv/src/kobocat/media
       - kobocat_media_volume:/srv/src/kobocat/media
 
 
  enketo:
    image: kobotoolbox/enketo-express:custom-confirmation-message
    container_name: enketo
    restart: always
    networks:
      - kobo-frontend-network
      - kobo-backend-network
    environment:
      - ENKETO_API_TOKEN=${ENKETO_API_TOKEN}
      - ENKETO_SECRET=${ENKETO_SECRET}
      - REDIS_URL=redis://redis-main:6379
      - ENKETO_REDIS_MAIN=redis://redis-main:6379
      - ENKETO_REDIS_CACHE=redis://redis-cache:6379
      - REDIS_CACHE_URL=redis://redis-cache:6379
    depends_on:
      - redis-main
      - redis-cache

   nginx:
   nginx:
     image: nginx:1.25-alpine
     image: nginx:1.25-alpine
     container_name: nginx
     container_name: nginx
     restart: always
     restart: always
    networks:
      - kobo-frontend-network
     ports:
     ports:
       - "8081:80"
       - "8081:80"
    volumes:
    networks:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - kobo-frontend-network
     depends_on:
     depends_on:
       - kpi
       - kpi
       - kobocat
       - kobocat
       - enketo
       - enketo
